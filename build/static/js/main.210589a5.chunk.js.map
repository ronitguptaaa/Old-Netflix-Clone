{"version":3,"sources":["axios.js","Row.js","requests.js","Nav.js","App.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParam","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","heigth","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Nav","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAMeA,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,iC,wCCwDEC,MAnDf,YAA+C,IAAhCC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAE5B,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KA8BA,OA7BAC,qBAAU,WAAI,4CACV,4BAAAC,EAAA,sEAC0Bb,EAAMc,IAAIT,GADpC,cACUU,EADV,OAEIN,EAAUM,EAAQC,KAAKC,SAF3B,kBAGWF,GAHX,4CADU,uBAAC,WAAD,wBAMVG,KACF,CAACb,IAuBC,sBAAKc,UAAU,MAAf,UACI,6BAAKf,IAEL,qBAAKe,UAAU,eAAf,SACKX,EAAOY,KAAI,SAAAC,GAAK,OACb,qBAEAC,QAAS,kBApBL,SAACD,GACdX,EACCC,EAAc,KAEdY,KAAkB,OAALF,QAAK,IAALA,OAAA,EAAAA,EAAOG,OAAQ,IAC3BC,MAAK,SAAAC,GACF,IAAMC,EAAW,IAAIC,gBAAgB,IAAIC,IAAIH,GAAKI,QACnDnB,EAAcgB,EAASb,IAAI,SAC3BiB,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAYTG,CAAYd,IACzBF,UAAS,sBAAiBb,GAAc,oBACxC8B,IAAG,UA7CN,wCA6CM,OAAgB9B,EAAae,EAAMgB,YAAchB,EAAMiB,eAAiBC,IAAKlB,EAAMG,MAHjFH,EAAMmB,SAMlB9B,GAAc,cAAC,IAAD,CAAS+B,QAAS/B,EAAYgC,KAjCxC,CACTC,OAAQ,MACRC,MAAO,OACPC,WAAY,CACRC,SAAU,UCzBhBC,EAAU,mCAaDC,EAXE,CACbC,cAAc,8BAAD,OAAgCF,EAAhC,mBACbG,sBAAsB,wBAAD,OAA0BH,EAA1B,sBACrBI,cAAc,4BAAD,OAA8BJ,EAA9B,mBACbK,kBAAkB,2BAAD,OAA6BL,EAA7B,mBACjBM,kBAAkB,2BAAD,OAA6BN,EAA7B,mBACjBO,kBAAkB,2BAAD,OAA6BP,EAA7B,mBACjBQ,mBAAmB,2BAAD,OAA6BR,EAA7B,sBAClBS,mBAAmB,2BAAD,OAA6BT,EAA7B,oB,MCUPU,MAhBf,WAII,OACI,sBAAKtC,UAAU,MAAf,UACI,qBAAKA,UAAU,YACfiB,IAAI,uEACJG,IAAI,iBACH,qBAAKpB,UAAU,cAChBiB,IAAI,yEACJG,IAAI,uBCWDmB,MApBf,WACE,OACE,sBAAKvC,UAAU,MAAf,UACE,cAAC,EAAD,IACD,cAAC,EAAD,CACAf,MAAM,mBACNC,SAAU2C,EAASE,sBACnB5C,YAAY,IAEZ,cAAC,EAAD,CAAKF,MAAM,eAAeC,SAAU2C,EAASC,gBAC7C,cAAC,EAAD,CAAK7C,MAAM,YAAYC,SAAU2C,EAASG,gBAC1C,cAAC,EAAD,CAAK/C,MAAM,gBAAgBC,SAAU2C,EAASI,oBAC9C,cAAC,EAAD,CAAKhD,MAAM,gBAAgBC,SAAU2C,EAASK,oBAC9C,cAAC,EAAD,CAAKjD,MAAM,gBAAgBC,SAAU2C,EAASM,oBAC9C,cAAC,EAAD,CAAKlD,MAAM,iBAAiBC,SAAU2C,EAASO,qBAC/C,cAAC,EAAD,CAAKnD,MAAM,gBAAgBC,SAAU2C,EAASQ,yBCfnDG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.210589a5.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: \"https://api.themoviedb.org/3\",\n});\n\nexport default instance;","import React, { useState, useEffect } from 'react'\nimport axios from './axios';\nimport \"./Row.css\";\nimport Youtube from \"react-youtube\";\nimport movieTrailer from 'movie-trailer'\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n\n    const [movies, setMovies] = useState([]);\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\n    useEffect(()=>{\n        async function fetchData(){\n            const request = await axios.get(fetchUrl);\n            setMovies(request.data.results);\n            return request;\n        }\n        fetchData();\n    },[fetchUrl]);\n   \n    const opts = {\n        heigth: \"390\",\n        width: \"100%\",\n        playerVars: {\n            autoplay: 1,\n        },\n    };\n\n    const handleClick = (movie) =>{\n        if(trailerUrl) {\n            setTrailerUrl(' ');\n        }else{\n            movieTrailer(movie?.name || \"\")\n            .then(url=>{\n                const urlParam = new URLSearchParams(new URL(url).search) ;\n               setTrailerUrl(urlParam.get(\"v\"));\n            }).catch((error)=>console.log(error))\n        }\n    }\n\n    return (\n        <div className=\"row\">\n            <h2>{title}</h2>\n\n            <div className=\"row__posters\">\n                {movies.map(movie => (\n                    <img \n                    key={movie.id}\n                    onClick={()=>handleClick(movie)}\n                    className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n                    src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name}/>\n                ))}\n            </div>\n            {trailerUrl && <Youtube videoId={trailerUrl} opts={opts}/>}\n        </div>\n    )\n}\n\nexport default Row","const API_KEY = \"2bddb884aeac85c4b684d47d567f4f2c\";\n\nconst requests = {\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\n}\n\nexport default requests;","import React from 'react'\nimport './Nav.css'\n\n\nfunction Nav() {\n\n   \n\n    return (\n        <div className=\"nav\">  \n            <img className=\"nav__logo\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/6/69/Netflix_logo.svg\"\n            alt=\"Netflix Logo\"/>\n             <img className=\"nav__avatar\"\n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\n            alt=\"Netflix avatar\"/>\n        </div>\n    )\n}\n\nexport default Nav\n","import React from 'react';\nimport './App.css';\nimport Row from './Row';\nimport requests from './requests';\nimport Nav from './Nav';\n\nfunction App() {\n  return (\n    <div className=\"app\"> \n      <Nav/>\n     <Row \n     title=\"NEFLIX ORIGINALS\" \n     fetchUrl={requests.fetchNetflixOriginals}\n     isLargeRow={true}\n     />\n     <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending}/>\n     <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n     <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n     <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n     <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n     <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n     <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}